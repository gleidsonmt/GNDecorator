buildscript {

    Properties props = new Properties()
    File propsFile = new File('./version.properties')
    props.load(propsFile.newDataInputStream())

    project.version =
            props.getProperty("minorVersion") +
                    "." + props.getProperty("majorVersion") +
                    "." + props.getProperty("buildNumber") +
                    "+" + props.getProperty("artifactBuildNumber")
}


plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'

//    id 'pl.allegro.tech.build.axion-release' version '1.14.0'
//    Only saving this site... nice!
//    https://axion-release-plugin.readthedocs.io/en/latest/examples/examples/

    id 'signing'
}


group 'io.github.gleidsonmt'
//project.version = scmVersion.versionCreator(scmVersion.version + project.properties["artifactBuildNumber"])

repositories {
    mavenCentral()
}


javafx {
    version = '17.0.1'
    modules = [
            'javafx.controls',
            'javafx.fxml', 'javafx.web'
    ]
}

application {
    mainClass = 'io.github.gleidsonmt.gndecorator.App'
    mainModule = 'io.github.gleidsonmt.gndecorator'
}

dependencies {
    implementation files('vendor/scenicView.jar')
}

task replaceVersionInREADME {
    // Maven
    ant.replaceregexp(match:'<version>([0-9+\\.]+)</version>',
            replace:"<version>${version}</version>", flags:'g', byline:true, encoding: 'UTF-8') {
        fileset(dir: '.', includes: 'README.md')
    }
    // Gradle
    ant.replaceregexp(match: "${project.group}\\:${project.name}\\:([0-9+#\\.]+)",
            replace:"${project.group}\\:${project.name}:${version}", flags:'g', byline:true, encoding: 'UTF-8') {
        fileset(dir: '.', includes: 'README.md')
    }

}

task incrementVersion (dependsOn: build) {
//task incrementVersion () {

    Properties props = new Properties()
    File propsFile = new File('./version.properties')
    props.load(propsFile.newDataInputStream())
    Integer nextbuildnum = ( ((props.getProperty('artifactBuildNumber')) as BigDecimal) + 1 )
    props.setProperty('artifactBuildNumber', nextbuildnum.toString())
    props.store(propsFile.newWriter(), null)
    props.load(propsFile.newDataInputStream())

    println "Your new Build artficat " + props.getProperty("artifactBuildNumber")
////    ant.replaceregexp(match:'artifactBuildNumber', replace:'artifactBuildNumber;'+nextbuildnum+';', byline:true) {
////        file 'src/main/webapp/index.jsp'
//    }
}



task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

//task javadocJar(type: Jar) {
//    classifier = 'javadoc'
//    from javadoc
//}

artifacts {
//    archives sourcesJar, javadocJar
    archives sourcesJar
}

signing {
    setRequired {
        // signing is only required if the artifacts are to be published
        gradle.taskGraph.allTasks.any { (it == PublishToMavenRepository) }
    }
    sign configurations.archives
}


publishing {

    publications {

        mavenJava(MavenPublication) {
            from components.java

            pom {
                name = 'GNDecorator'
                description = 'Custom window decorator for javafx apps.'
                url = 'https://github.com/gleidsonmt/gndecorator'

                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = 'https://www.gnu.org/licenses/gpl-3.0-standalone.html'
                    }
                }
                developers {
                    developer {
                        id = 'Gleidson2020'
                        name = 'Gleidson Neves da Silveira'
                        email = 'gleidisonmt@gmail.com'
                    }
                }

                scm {
                    url = 'https://github.com/gleidsonmt/gndecorator'
                    connection = 'scm:https://github.com/gleidsonmt/gndecorator.git'
                    developerConnection = 'scm:git://github.com/gleidsonmt/gndecorator.git'
                }

                repositories {

                    maven {
                        name = "GNDecorator"
                        url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                        credentials {
                            username = project.properties["ossrhUser"]
                            password = project.properties["ossrhPassword"]

                        }
                    }

                    maven {
                        name = "GitHubPackages"
                        url = "https://maven.pkg.github.com/gleidsonmt/gndecorator"
                        credentials {
                            username = project.properties["github.user"]
                            password = project.properties["github.token"]
                        }
                    }
                }
            }
        }
    }
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'GNDecorator'
    }

    jpackage {

        imageOptions = [
                '--icon', 'logo_256.ico'
        ]
        installerType = 'exe'
        installerOptions = [
                '--description', "A decorator stage for javafx apps.",
                '--copyright', 'Copyrigth Â© 2021-2022 GLEIDSON NEVES DA SILVEIRA'
                , '--icon', 'logo_256.ico'

        ]

        addExtraDependencies("javafx")
    }
}

jlinkZip {
    group = 'distribution'
}

